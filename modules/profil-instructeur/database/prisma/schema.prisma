generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("INSTRUCTOR_DATABASE_URL")
  schema   = "instructor_schema"
}

model InstructorProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  firstName   String
  lastName    String
  photo       String?
  bio         String?
  certified   Boolean  @default(false)
  sports      String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  sessions    Session[]
  availability Availability[]
  
  @@schema("instructor_schema")
}

model Session {
  id              String      @id @default(cuid())
  instructorId    String
  title           String
  description     String?
  sport           String
  duration        Int
  maxParticipants Int
  price           Float
  priceType       PriceType
  meetingPoint    String
  isActive        Boolean     @default(true)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  instructor      InstructorProfile @relation(fields: [instructorId], references: [id])
  timeSlots       TimeSlot[]
  
  @@schema("instructor_schema")
}

model Availability {
  id           String    @id @default(cuid())
  instructorId String
  dayOfWeek    Int
  startTime    String
  endTime      String
  breakStart   String?
  breakEnd     String?
  isActive     Boolean   @default(true)
  
  instructor   InstructorProfile @relation(fields: [instructorId], references: [id])
  
  @@schema("instructor_schema")
}

model TimeSlot {
  id        String   @id @default(cuid())
  sessionId String
  startTime DateTime
  endTime   DateTime
  isBooked  Boolean  @default(false)
  
  session   Session  @relation(fields: [sessionId], references: [id])
  
  @@schema("instructor_schema")
}

enum PriceType {
  FIXED_PER_PERSON
  FIXED_PER_SESSION
  
  @@schema("instructor_schema")
}
